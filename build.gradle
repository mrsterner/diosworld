plugins {
	id 'fabric-loom' version '0.10-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

minecraft {
}
loom {
    accessWidenerPath = file("src/main/resources/phantomblood.accesswidener")
}

repositories {
    maven {
        name = 'Ladysnake Mods'
        url = 'https://ladysnake.jfrog.io/artifactory/mods'
        content {
            includeGroup 'io.github.ladysnake'
            includeGroupByRegex 'io\\.github\\.onyxstudios.*'
        }
    }
    maven { url 'https://repo.repsy.io/mvn/gandiber/geckolib' }
    maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
    maven {
        name = "Haema"
        url = "https://www.cursemaven.com"
    }

    maven {
        name "cloth config, rei"
        url "https://maven.shedaniel.me"
    }
    maven {
        name "somnus"
        url "https://maven.theillusivec4.top"
    }
    maven {
        name "patchouli"
        url "https://maven.blamejared.com"
    }

    maven {
        name = 'Nexus OSS Repository'
        url = 'https://oss.sonatype.org/content/repositories/snapshots'
    }
    maven {
        name "jitpack"
        url "https://jitpack.io"
    }
    maven {
        name = "Jamies"
        url "https://maven.jamieswhiteshirt.com/libs-release/"
        content {
            includeGroup "com.jamieswhiteshirt"
        }
    }


    maven {
        name = "AperLambda"
        url = 'https://aperlambda.github.io/maven'
    }
    maven {
        name = "dblsaiko"
        url = "https://maven.dblsaiko.net/"

    }
    maven {
        url 'http://server.bbkr.space:8081/artifactory/libs-release'
        allowInsecureProtocol = true
    }
    maven {
        name = "Terraformers"
        url = "https://maven.terraformersmc.com/releases/"
        content {
            includeGroup "io.github.prospector"
            includeGroup "com.terraformersmc"
        }
    }
    maven {url "https://hephaestus.dev/release"}
    mavenLocal()
    maven {
        name 'AperLambda'
        url 'https://aperlambda.github.io/maven'
    }
    maven {
        name 'Gegy'
        url 'https://maven.gegy.dev'
    }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"
    //Cloth Config
    modImplementation("me.shedaniel.cloth:cloth-config-fabric:${cloth_config_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }
    //Patchouli
    modImplementation "vazkii.patchouli:Patchouli:${patchouli_version}"
    //CCA
    modApi "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:${project.cc_version}"
    include "io.github.onyxStudios.Cardinal-Components-API:cardinal-components-base:${project.cc_version}"
    modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-entity:${project.cc_version}"
    include "io.github.onyxStudios.Cardinal-Components-API:cardinal-components-entity:${project.cc_version}"
    modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-world:${project.cc_version}"
    include "io.github.onyxStudios.Cardinal-Components-API:cardinal-components-world:${project.cc_version}"
    //Geckolib
    modImplementation 'software.bernie.geckolib:geckolib-fabric-1.18:3.0.25'
    //Satin
    modImplementation "io.github.ladysnake:satin:${project.satin_version}"
    include "io.github.ladysnake:satin:${project.satin_version}"
    //Mod Menu
    modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"
    //Fabric ASM
    modImplementation 'com.github.Chocohead:Fabric-ASM:v2.3'
    include 'com.github.Chocohead:Fabric-ASM:v2.3'

    //Canvas
    //modImplementation "grondag:canvas-mc117-1.17:1.0.1985"

    //REI

    modCompileOnly "me.shedaniel:RoughlyEnoughItems-api-fabric:${rei_version}"
    modRuntime "me.shedaniel:RoughlyEnoughItems-fabric:${rei_version}"


    //Haema
    modImplementation "curse.maven:haema-391257:${project.haema_version}"

    //LambdaDynamicLights
    /*
    modImplementation "curse.maven:lambdynamiclights-393442:${project.lambdynamiclights_version}"
    modImplementation "dev.lambdaurora:spruceui:${project.spruceui_version}"
    include "dev.lambdaurora:spruceui:${project.spruceui_version}"
     */

    //Kotlin

    modImplementation "net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin_version}"
    modImplementation 'me.lucko:fabric-permissions-api:0.1-SNAPSHOT'
     

    //Somnus
    /*
    modImplementation "top.theillusivec4.somnus:somnus-fabric:${project.somnus_version}"
    include "top.theillusivec4.somnus:somnus-fabric:${project.somnus_version}"
     */
}

processResources {
    inputs.property "version", project.version


        filesMatching("fabric.mod.json") {
            expand "version": project.version
        }

        
    }

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
    it.options.release = 16
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

loom {
    accessWidenerPath = file("src/main/resources/phantomblood.accesswidener")
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(jar) {
				builtBy remapJar
			}
			artifact("${project.buildDir.absolutePath}/libs/${archivesBaseName}-${project.version}.jar"){
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}